#!/bin/bash

# Prompt the user for username and password
read -p "Enter username: " username
read -s -p "Enter password: " password  # -s flag for silent input (no display)
echo  # Add a newline for formatting

base_url="https://nms-api.arcapps.org"

# Define the API endpoint and JSON data
api_url="$base_url/tuso-api/rdpserver/login"

content_type="Content-Type: application/json"

json_data='{
  "userName": "'"$username"'",
  "password": "'"$password"'"
}'

# Make the API call using curl
response=$(curl -X POST -H "$content_type" -d "$json_data" "$api_url")

# Check if the response indicates success
status_code=$(echo "$response" | jq -r '.statusCode')
if [ "$status_code" -ne 200 ]; then
  echo "Login failed! Please check your username and password."
  exit 1
fi

# Extract serverURL and organizationID from the response data
serverURL=$(echo "$response" | jq -r '.data.serverURL')
organizationID=$(echo "$response" | jq -r '.data.organizationId')

if [ -z "$serverURL" ] || [ -z "$organizationID" ]; then
  echo "Invalid response: Missing serverURL or organizationID."
  exit 1
fi

echo "Login Successful"
echo "Organization ID: $organizationID"
echo "Server URL: $serverURL"

HostName=$serverURL
Organization=$organizationID
GUID=$(cat /proc/sys/kernel/random/uuid)
UpdatePackagePath=""

Args=( "$@" )
ArgLength=${#Args[@]}

# Process arguments for uninstall or path options
for (( i=0; i<${ArgLength}; i+=2 ));
do
    if [ "${Args[$i]}" = "--uninstall" ]; then
        systemctl stop remotely-agent
        rm -r -f /usr/local/bin/Remotely
        rm -f /etc/systemd/system/remotely-agent.service
        systemctl daemon-reload
        echo "Tuso Agent Uninstalled Successfully"
        exit
    elif [ "${Args[$i]}" = "--path" ]; then
        UpdatePackagePath="${Args[$i+1]}"
    fi
done

# Install required dependencies
UbuntuVersion=$(lsb_release -r -s)
wget -q https://packages.microsoft.com/config/ubuntu/$UbuntuVersion/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
dpkg -i packages-microsoft-prod.deb
apt-get update
apt-get -y install apt-transport-https
apt-get update
apt-get -y install dotnet-runtime-6.0
rm packages-microsoft-prod.deb

apt-get -y install libx11-dev libxrandr-dev unzip libc6-dev libgdiplus libxtst-dev xclip jq curl

# Handle existing device info and assign GUID if necessary
if [ -f "/usr/local/bin/Remotely/ConnectionInfo.json" ]; then
    SavedGUID=$(cat "/usr/local/bin/Remotely/ConnectionInfo.json" | jq -r '.DeviceID')
    if [[ "$SavedGUID" != "null" && -n "$SavedGUID" ]]; then
        GUID="$SavedGUID"
    fi
fi

# Clean up and set up directories
rm -r -f /usr/local/bin/Remotely
rm -f /etc/systemd/system/remotely-agent.service

mkdir -p /usr/local/bin/Remotely/
cd /usr/local/bin/Remotely/

if [ -z "$UpdatePackagePath" ]; then
    echo "Downloading client..." >> /tmp/Remotely_Install.log
    wget $HostName/Content/Remotely-Linux.zip
else
    echo "Copying install files..." >> /tmp/Remotely_Install.log
    cp "$UpdatePackagePath" /usr/local/bin/Remotely/Remotely-Linux.zip
    rm -f "$UpdatePackagePath"
fi

unzip ./Remotely-Linux.zip
rm -f ./Remotely-Linux.zip
chmod +x ./Tuso_Agent
chmod +x ./Desktop/Remotely_Desktop

# Create connection info JSON
connectionInfo="{
    \"DeviceID\":\"$GUID\", 
    \"Host\":\"$HostName\",
    \"OrganizationID\": \"$Organization\",
    \"ServerVerificationToken\":\"\"
}"

echo "$connectionInfo" > ./ConnectionInfo.json

curl --head $HostName/Content/Remotely-Linux.zip | grep -i "etag" | cut -d' ' -f 2 > ./etag.txt

# Create and enable the service
serviceConfig="[Unit]
Description=The Remotely agent used for remote access.

[Service]
WorkingDirectory=/usr/local/bin/Remotely/
ExecStart=/usr/local/bin/Remotely/Tuso_Agent
Restart=always
StartLimitIntervalSec=0
RestartSec=10

[Install]
WantedBy=graphical.target"

echo "$serviceConfig" > /etc/systemd/system/remotely-agent.service

sudo systemctl enable remotely-agent
sudo systemctl restart remotely-agent

echo "Install complete." >> /tmp/Remotely_Install.log
